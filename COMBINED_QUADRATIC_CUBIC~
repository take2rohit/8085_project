	LXI SP, 400FH	; INITIALIZE STACK POINTER
	LDA 7001H	; X_final
	STA 6FFDH	; STORE X_final at 6FFDH
	LXI H, 7000H	; X_Initial
	SUB M
	ADI 01H
 	MOV D, A	
	MOV E, A	; HOW MANY TIMES TO FIND
	STA 6FFEH
	LDA 7000H
	STA 6FFCH	;STORE X_initial

	LDA 6FFFH	; CHOICE 1-CUBIC, 2 QUADRATIC
	CPI 01H
	JZ CUBE
	JMP QUAD	

; CODE TO FIND QUADRATIC FUNCTION a*X^3 + b*X^2 + cX + d

CUBE:	LXI H, 7000H
	MOV B, M
	CALL MUL	
	CALL MUL	; FOUND X^3
	LXI H, 7002H	; MOVE TO ADDRESS 7002 (a is stored)
	CALL MUL	; FOUND A*X^3
	PUSH B		
	LDA 7003H	; b IS STORED HERE
	MOV B, A
	DCX H
	DCX H
	CALL MUL
	CALL MUL
	PUSH B
	LDA 7004H	; c IS STORED
	MOV B, A
	LXI H, 7000H
	CALL MUL
	PUSH B
	LDA 7005H
	POP B		
	ADD B		; d + cx 
	POP B
	ADD B		; d + cx  + b*x^2
	POP B
	ADD B		; d + cx  + b*x^2 + a*x^3
	MOV B, A
	PUSH B		; PUSH FINAL RESULT TO STACK
	LXI H, 7000H
	INR M
	DCR D
	JNZ CUBE
	JMP STORE

; CODE TO FIND QUADRATIC FUNCTION a*X^2 + b*X + c


QUAD:	LXI H, 7000H
	MOV B, M
	CALL MUL	; FOUND X^2
 	INX H
	INX H		; MOVE TO ADDRESS 7002 (A is stored)
	CALL MUL	; FOUND A*X^2
	PUSH B		
	LDA 7003H	; b IS STORED HERE
	MOV B, A
	DCX H
	DCX H
	CALL MUL
	PUSH B
	LDA 7004H	; c IS STORED
	POP B		
	ADD B		; c+b*x 
	POP B
	ADD B		; c+b*x + a*x^2
	MOV B, A
	PUSH B		; PUSH FINAL RESULT TO STACK
	LXI H, 7000H
	INR M
	DCR D
	JNZ QUAD
	JMP STORE

; SUBROUTINE TO MULTIPLY M AND B

MUL:	XRA A		; SUBROUTINE FOR MULTIPLICATION
LOOP:	ADD M
	DCR B
	JNZ LOOP
	MOV B,A
	RET

; SUBROUTINE TO STORE VALUES

STORE:	LXI H, 7006H
ST:	POP B		; STORE TO MEMORY LOCATION (REVERSE ORDER)
	MOV M, B
	INX H
	DCR E
	JNZ ST

; SUBROUTINE TO CREATE STACK OF TABLE

	LXI H, 6FFEH
	MOV A,M
	LXI H, 6FFDH
	MOV C, M
	LXI H, 7006H

CREATE:	MOV B, M
	PUSH B
	INX H
	DCR C
	DCR A
	JNZ CREATE

; PUSHING X Y TO MEMORY

	LDA 6FFEH
	LXI H, 7006H	; START STORING FROM HERE (X1,Y1), (X2,Y2), ...
KEEP:	POP B		
	MOV M, C
	INX H
	MOV M, B
	INX H
	DCR A
	JNZ KEEP
HLT
	 